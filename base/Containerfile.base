FROM localhost/archlinux-ostree-builder AS builder

# Bootstrap early reuired packages.
RUN pacstrap -c -G -M /mnt \
base \
	linux-firmware \
	dracut \
	intel-ucode \
	amd-ucode \
	wget

# Setup dracut
COPY rootfs/etc/dracut.conf.d/ostree.conf /mnt/etc/dracut.conf.d/
COPY rootfs/etc/dracut.conf.d/module-setup.sh /mnt/etc/dracut.conf.d/

# Build AUR packages: Install dependencies and create user.
RUN pacman --noconfirm -Syu base-devel git sudo
RUN useradd -m builder

# Build AUR packages: Build
USER builder
RUN git clone https://aur.archlinux.org/yay-bin.git /home/builder/yay-bin
RUN cd /home/builder/yay-bin && makepkg -s --noconfirm
USER root

# Build AUR packages: Copy packages to a common place.
RUN mkdir /aur
RUN cp /home/builder/yay-bin/*.tar.zst /aur/

# Turn the pacstrapped rootfs into a container image.
FROM scratch as base
COPY --from=builder /mnt /

# Switch to CachyOS repos
RUN echo 'Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch' > /etc/pacman.d/mirrorlist
RUN pacman-key --init
RUN pacman-key --populate
RUN wget https://mirror.cachyos.org/cachyos-repo.tar.xz && \
	tar xvf cachyos-repo.tar.xz && \
	cd cachyos-repo && \
	sed -i 's/pacman /pacman --noconfirm /g' cachyos-repo.sh && \
	./cachyos-repo.sh && \
	cd .. && \
	rm -rf cachyos-repo cachyos-repo.tar.xz

# Install built AUR packages.
COPY --from=builder /aur /aur
RUN pacman --noconfirm -U /aur/*
RUN rm -r /aur

# Install packages
RUN pacman --noconfirm -S \
	linux-cachyos \
	efibootmgr \
	grub \
	ostree \
	podman \
	which \
	less \
	openssh \
	lsof \
	pigz \
	b3sum \
	dust \
	eza \
	bat \
	git-delta \
	tealdeer \
	thefuck \
	zoxide \
	rust \
	sshfs \
	systemd-resolvconf \
	zram-generator \
	zsh \
	ripgrep \
	python-pipx \
	logrotate \
	man-db \
	man-pages \
	neovim \
	nss-mdns \
	opendoas \
	bash-completion \
	bridge-utils \
	btop \
	btrfs-progs \
	clamav \
	distrobox \
	dnsmasq \
	exfatprogs \
	fzf \
	git-lfs \
	hunspell-en_us \
	zip \
	unzip \
	bpftune-git \
	libfido2

COPY --from=scripts aur-install.sh /
RUN /aur-install.sh \
	ntpsec \
	btrfsmaintenance \
	&& rm /aur-install.sh


# The rootfs can't be modified and systemd can't create them implicitly.
# That's why we have to create them as part of the rootfs.
RUN mkdir /efi

# Set locale
RUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime
RUN sed -i 's/^#\(en_US.UTF-8 UTF-8\)/\1/' /etc/locale.gen
RUN locale-gen

# Enable NTPSec
RUN systemctl enable ntpd
RUN rm /etc/ntp.d/use-pool
COPY rootfs/etc/ntp.d/use-pool /etc/ntp.d/use-pool

# Enable networking
RUN systemctl enable systemd-networkd
RUN systemctl enable systemd-resolved
RUN systemctl disable systemd-networkd-wait-online

